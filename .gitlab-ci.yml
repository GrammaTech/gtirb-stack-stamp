variables:
  GIT_SUBMODULE_STRATEGY: recursive
  GIT_STRATEGY: clone

stages:
  - check-format
  - test
  - test-windows
  - build
  - test_package

.setup-apt-packages: &setup-apt-packages |
  wget -O - https://download.grammatech.com/gtirb/files/apt-repo/conf/apt.gpg.key | apt-key add -
  echo "deb https://download.grammatech.com/gtirb/files/apt-repo bionic stable" | tee -a /etc/apt/sources.list
  apt-get update -y
  apt-get install -y libgtirb-dev gtirb-pprinter ddisasm


.setup-packages: &setup-packages |
  python3 -m pip install dataclasses networkx gtirb gtirb-capstone gtirb-functions

default:
  tags: ['kubernetes']
  image: $DOCKER_REGISTRY/$CI_PROJECT_PATH:master

check-format:
  stage: check-format
  script:
    - pre-commit run --all-files

test-python:
  stage: test
  # We upload tests/factorial so that test-python-windows can try to stack
  # stamp an ELF binary, and we can't generate an ELF binary on Windows.
  artifacts:
    name: "$CI_COMMIT_REF_NAME-$CI_JOB_NAME"
    paths:
      - tests/factorial
  script:
    - *setup-packages
    - *setup-apt-packages
    - python3 setup.py test

test-python-windows:
  stage: test-windows
  tags:
    - windows-gtirb-stack-stamp
  variables:
    GTIRB_BRANCH: master
    GTIRB_PPRINTER_BRANCH: master
    DDISASM_BRANCH: master
    GTIRB_CAPSTONE_BRANCH: master
    GTIRB_FUNCTIONS_BRANCH: master
  needs: ['test-python']
  script:
    # Install gtirb-pprinter
    - curl -L https://git.grammatech.com/rewriting/gtirb-pprinter/-/jobs/artifacts/${GTIRB_PPRINTER_BRANCH}/download?job=build-windows-msvc-relwithdebinfo --output "gtirb-pprinter-artifacts.zip"
    # Below, unzip doesn't work: the unzipped binary will not execute because
    # of a permissions error.  If you give it the correct permissions it just
    # silently fails on the command line.  This is happening because the zip
    # file is 'blocked'.  The powershell cmdlet Expand-Archive will unzip a
    # runnable, 'unblocked' binary.
    - powershell -Command '$global:ProgressPreference = "SilentlyContinue"; Expand-Archive gtirb-pprinter-artifacts.zip'
    - cp -r gtirb-pprinter-artifacts/gtirb_pprinter-*-win64 ./
    # Install ddisasm
    - curl -L https://git.grammatech.com/rewriting/ddisasm/-/jobs/artifacts/${DDISASM_BRANCH}/download?job=build-windows-msvc-relwithdebinfo --output "ddisasm-artifacts.zip"
    - powershell -Command '$global:ProgressPreference = "SilentlyContinue"; Expand-Archive ddisasm-artifacts.zip'
    - cp -r ddisasm-artifacts/DDISASM-*-win64 ./
    # Install gtirb & helper libraries
    - python --version
    - python -m pip install --upgrade pip && python -m pip install networkx 'protobuf<3.12.2' keystone-engine capstone
    - python -m pip install gtirb --index-url https://__token__:$CI_JOB_TOKEN@git.grammatech.com/api/v4/projects/565/packages/pypi/simple
    - python -m pip install gtirb-capstone --index-url https://__token__:$CI_JOB_TOKEN@git.grammatech.com/api/v4/projects/1350/packages/pypi/simple
    - python -m pip install gtirb-functions --index-url https://__token__:$CI_JOB_TOKEN@git.grammatech.com/api/v4/projects/1349/packages/pypi/simple
    # Run the test
    - PATH="$PATH;$(cygpath -w $(pwd)/DDISASM-*-win64/bin);$(cygpath -w $(pwd)/gtirb_pprinter-*-win64/bin)" cmd.exe /C "C:\\VS\\VC\\Auxiliary\\Build\\vcvars64.bat && python setup.py test"

# test-common-lisp:
#   stage: test
#   needs: ['setup-apt-repo']
#   script:
#     - ln -s $(pwd) /root/quicklisp/local-projects/gtirb-stack-stamp
#     - sbcl --eval '(ql:quickload :gtirb-stack-stamp)' --eval '(asdf:make :gtirb-stack-stamp :type :program :monolithic t)'
#     - ./stack-stamp --help

test-cpp:
  stage: test
  script:
    - *setup-apt-packages
    - cmake ./ -Bbuild -DCMAKE_BUILD_TYPE=Debug
    - cd build
    - make -j8
    - cd ..
    - build/bin/test-gtirb-stack-stamp

build:
  stage: build
  artifacts:
    paths:
    - dist/gtirb_stack_stamp-?.?.?-py3-none-any.whl
    expire_in: 1 weeks
  script:
    - *setup-packages
    - *setup-apt-packages
    - python3 setup.py sdist bdist_wheel

test_package:
  variables:
    GIT_STRATEGY: none
  stage: test_package
  script:
    - *setup-packages
    - *setup-apt-packages
    - for f in dist/*.whl; do python3 -m pip install $f; done
